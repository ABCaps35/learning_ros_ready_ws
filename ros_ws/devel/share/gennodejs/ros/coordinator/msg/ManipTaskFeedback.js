// Auto-generated. Do not edit!

// (in-package coordinator.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class ManipTaskFeedback {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.feedback_status = null;
    }
    else {
      if (initObj.hasOwnProperty('feedback_status')) {
        this.feedback_status = initObj.feedback_status
      }
      else {
        this.feedback_status = 0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type ManipTaskFeedback
    // Serialize message field [feedback_status]
    bufferOffset = _serializer.int32(obj.feedback_status, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type ManipTaskFeedback
    let len;
    let data = new ManipTaskFeedback(null);
    // Deserialize message field [feedback_status]
    data.feedback_status = _deserializer.int32(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 4;
  }

  static datatype() {
    // Returns string type for a message object
    return 'coordinator/ManipTaskFeedback';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '3f8a8da4157bed0205549b661c5eec04';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #feedback codes:  perception_busy; planning_busy; pickup_busy; dropoff_busy
    int32 RECEIVED_NEW_TASK = 0
    int32 PERCEPTION_BUSY = 1
    int32 PICKUP_PLANNING_BUSY = 2
    int32 PICKUP_MOTION_BUSY = 3
    int32 PICKUP_SUCCESSFUL = 103
    int32 DROPOFF_PLANNING_BUSY = 4
    int32 DROPOFF_MOTION_BUSY = 5
    int32 NO_CURRENT_TASK = 6
    int32 ABORTED = 7
    int32 COMPLETED_MOVE = 8
    int32 COMPLETED_DROPOFF = 9
    int32 PREPOSE_MOVE_BUSY = 10
    int32 MOVE_BUSY = 11
    
    
    int32 feedback_status
    
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new ManipTaskFeedback(null);
    if (msg.feedback_status !== undefined) {
      resolved.feedback_status = msg.feedback_status;
    }
    else {
      resolved.feedback_status = 0
    }

    return resolved;
    }
};

// Constants for message
ManipTaskFeedback.Constants = {
  RECEIVED_NEW_TASK: 0,
  PERCEPTION_BUSY: 1,
  PICKUP_PLANNING_BUSY: 2,
  PICKUP_MOTION_BUSY: 3,
  PICKUP_SUCCESSFUL: 103,
  DROPOFF_PLANNING_BUSY: 4,
  DROPOFF_MOTION_BUSY: 5,
  NO_CURRENT_TASK: 6,
  ABORTED: 7,
  COMPLETED_MOVE: 8,
  COMPLETED_DROPOFF: 9,
  PREPOSE_MOVE_BUSY: 10,
  MOVE_BUSY: 11,
}

module.exports = ManipTaskFeedback;

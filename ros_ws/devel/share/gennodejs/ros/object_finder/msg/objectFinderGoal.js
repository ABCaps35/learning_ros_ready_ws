// Auto-generated. Do not edit!

// (in-package object_finder.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class objectFinderGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.object_id = null;
      this.known_surface_ht = null;
      this.surface_ht = null;
    }
    else {
      if (initObj.hasOwnProperty('object_id')) {
        this.object_id = initObj.object_id
      }
      else {
        this.object_id = 0;
      }
      if (initObj.hasOwnProperty('known_surface_ht')) {
        this.known_surface_ht = initObj.known_surface_ht
      }
      else {
        this.known_surface_ht = false;
      }
      if (initObj.hasOwnProperty('surface_ht')) {
        this.surface_ht = initObj.surface_ht
      }
      else {
        this.surface_ht = 0.0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type objectFinderGoal
    // Serialize message field [object_id]
    bufferOffset = _serializer.int32(obj.object_id, buffer, bufferOffset);
    // Serialize message field [known_surface_ht]
    bufferOffset = _serializer.bool(obj.known_surface_ht, buffer, bufferOffset);
    // Serialize message field [surface_ht]
    bufferOffset = _serializer.float32(obj.surface_ht, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type objectFinderGoal
    let len;
    let data = new objectFinderGoal(null);
    // Deserialize message field [object_id]
    data.object_id = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [known_surface_ht]
    data.known_surface_ht = _deserializer.bool(buffer, bufferOffset);
    // Deserialize message field [surface_ht]
    data.surface_ht = _deserializer.float32(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 9;
  }

  static datatype() {
    // Returns string type for a message object
    return 'object_finder/objectFinderGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '8657c16ee27b175765f0d86cc8f66fbd';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #objectFinder.action
    #goal:
    #get object ID codes from <object_manipulation_properties/object_ID_codes.h>
    
    #goal fields to fill in:
    int32 object_id
    
    #boolean to declare if object is on a horizontal surface of known height:
    bool known_surface_ht
    
    #if surface ht is known, fill it in
    float32 surface_ht
    
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new objectFinderGoal(null);
    if (msg.object_id !== undefined) {
      resolved.object_id = msg.object_id;
    }
    else {
      resolved.object_id = 0
    }

    if (msg.known_surface_ht !== undefined) {
      resolved.known_surface_ht = msg.known_surface_ht;
    }
    else {
      resolved.known_surface_ht = false
    }

    if (msg.surface_ht !== undefined) {
      resolved.surface_ht = msg.surface_ht;
    }
    else {
      resolved.surface_ht = 0.0
    }

    return resolved;
    }
};

module.exports = objectFinderGoal;

; Auto-generated. Do not edit!


(cl:in-package coordinator-msg)


;//! \htmlinclude ManipTaskAction.msg.html

(cl:defclass <ManipTaskAction> (roslisp-msg-protocol:ros-message)
  ((action_goal
    :reader action_goal
    :initarg :action_goal
    :type coordinator-msg:ManipTaskActionGoal
    :initform (cl:make-instance 'coordinator-msg:ManipTaskActionGoal))
   (action_result
    :reader action_result
    :initarg :action_result
    :type coordinator-msg:ManipTaskActionResult
    :initform (cl:make-instance 'coordinator-msg:ManipTaskActionResult))
   (action_feedback
    :reader action_feedback
    :initarg :action_feedback
    :type coordinator-msg:ManipTaskActionFeedback
    :initform (cl:make-instance 'coordinator-msg:ManipTaskActionFeedback)))
)

(cl:defclass ManipTaskAction (<ManipTaskAction>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <ManipTaskAction>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'ManipTaskAction)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name coordinator-msg:<ManipTaskAction> is deprecated: use coordinator-msg:ManipTaskAction instead.")))

(cl:ensure-generic-function 'action_goal-val :lambda-list '(m))
(cl:defmethod action_goal-val ((m <ManipTaskAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader coordinator-msg:action_goal-val is deprecated.  Use coordinator-msg:action_goal instead.")
  (action_goal m))

(cl:ensure-generic-function 'action_result-val :lambda-list '(m))
(cl:defmethod action_result-val ((m <ManipTaskAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader coordinator-msg:action_result-val is deprecated.  Use coordinator-msg:action_result instead.")
  (action_result m))

(cl:ensure-generic-function 'action_feedback-val :lambda-list '(m))
(cl:defmethod action_feedback-val ((m <ManipTaskAction>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader coordinator-msg:action_feedback-val is deprecated.  Use coordinator-msg:action_feedback instead.")
  (action_feedback m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <ManipTaskAction>) ostream)
  "Serializes a message object of type '<ManipTaskAction>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_goal) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_result) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'action_feedback) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <ManipTaskAction>) istream)
  "Deserializes a message object of type '<ManipTaskAction>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_goal) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_result) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'action_feedback) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<ManipTaskAction>)))
  "Returns string type for a message object of type '<ManipTaskAction>"
  "coordinator/ManipTaskAction")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'ManipTaskAction)))
  "Returns string type for a message object of type 'ManipTaskAction"
  "coordinator/ManipTaskAction")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<ManipTaskAction>)))
  "Returns md5sum for a message object of type '<ManipTaskAction>"
  "b0d72a10459cfe87a5243cfd55aca4ab")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'ManipTaskAction)))
  "Returns md5sum for a message object of type 'ManipTaskAction"
  "b0d72a10459cfe87a5243cfd55aca4ab")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<ManipTaskAction>)))
  "Returns full string definition for message of type '<ManipTaskAction>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%ManipTaskActionGoal action_goal~%ManipTaskActionResult action_result~%ManipTaskActionFeedback action_feedback~%~%================================================================================~%MSG: coordinator/ManipTaskActionGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%ManipTaskGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: coordinator/ManipTaskGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#goal: specify object code, perception type (incl blind), dropoff location, optional pickup location~%#task codes:~%int32 PCL_VISION = 1 # could have more camera sources to refer to~%int32 BLIND_MANIP = 2 #expect pose specified in pickup_location field~%~%#action codes:~%int32 GET_PICKUP_POSE = 1 #low level ops; maybe don't implement~%int32 WAIT_FOR_FINDER = 101~%~%int32 FIND_TABLE_SURFACE = 2 #do this once, and re-use result for multiple objects~%int32 WAIT_FIND_TABLE_SURFACE = 102~%~%int32 GRAB_OBJECT = 3 #assumes use of current pickup pose,~%                      #whether provided for \"blind\" manip, or found~%                      #from use of PCL_VISION~%int32 WAIT_FOR_GRAB_OBJECT = 103    ~%                 ~%int32 DROPOFF_OBJECT = 4 #must provide dropoff_frame in goal msg~%int32 WAIT_FOR_DROPOFF_OBJECT = 104~%~%#int32 MANIP_OBJECT = 5 #macro: does perception, grab, and dropoff~%                       #MUST provide dropoff frame, and means to~%                       #get pickup_frame~%~%int32 STRADDLE_OBJECT = 8 #test mode--simply straddle object, but don't grasp it~%int32 WAIT_FOR_STRADDLE_OBJECT = 108~%~%int32 CART_MOVE_TO_GRIPPER_POSE = 9~%int32 WAIT_FOR_CART_MOVE = 109~%                       ~%int32 NO_CURRENT_TASK = 6~%int32 MOVE_TO_PRE_POSE = 7~%int32 WAIT_FOR_MOVE_TO_PREPOSE = 107~%int32 WAIT_FOR_MOVE = 107 #generic wait-for-move status~%~%int32 ABORT= 666~%~%#goal specification:~%int32 action_code #what action should be performed?~%int32 object_code #refer to a-priori known object types by object-ID codes~%geometry_msgs/PoseStamped pickup_frame #specify object coords for pickup ~%geometry_msgs/PoseStamped dropoff_frame #specify desired drop-off coords of object's frame~%geometry_msgs/PoseStamped gripper_goal_frame #a goal frame to move gripper~%int32 perception_source  #e.g. name a camera source~%~%================================================================================~%MSG: geometry_msgs/PoseStamped~%# A Pose with reference coordinate frame and timestamp~%Header header~%Pose pose~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: coordinator/ManipTaskActionResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%ManipTaskResult result~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: coordinator/ManipTaskResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#return codes:~%int32 MANIP_SUCCESS = 0~%int32 FAILED_PERCEPTION = 1~%int32 FAILED_PICKUP_PLAN =2 ~%int32 FAILED_DROPOFF_PLAN=3~%int32 FAILED_PICKUP=4~%int32 FAILED_DROPOFF=5~%int32 DROPPED_OBJECT = 6~%int32 ABORTED = 7~%int32 PENDING = 8~%int32 FAILED_MOVE = 9~%~%int32 manip_return_code~%int32 object_grabber_return_code~%geometry_msgs/PoseStamped des_gripper_pose~%int32 object_finder_return_code~%geometry_msgs/PoseStamped object_pose~%~%~%================================================================================~%MSG: coordinator/ManipTaskActionFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%ManipTaskFeedback feedback~%~%================================================================================~%MSG: coordinator/ManipTaskFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#feedback codes:  perception_busy; planning_busy; pickup_busy; dropoff_busy~%int32 RECEIVED_NEW_TASK = 0~%int32 PERCEPTION_BUSY = 1~%int32 PICKUP_PLANNING_BUSY = 2~%int32 PICKUP_MOTION_BUSY = 3~%int32 PICKUP_SUCCESSFUL = 103~%int32 DROPOFF_PLANNING_BUSY = 4~%int32 DROPOFF_MOTION_BUSY = 5~%int32 NO_CURRENT_TASK = 6~%int32 ABORTED = 7~%int32 COMPLETED_MOVE = 8~%int32 COMPLETED_DROPOFF = 9~%int32 PREPOSE_MOVE_BUSY = 10~%int32 MOVE_BUSY = 11~%~%~%int32 feedback_status~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'ManipTaskAction)))
  "Returns full string definition for message of type 'ManipTaskAction"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%ManipTaskActionGoal action_goal~%ManipTaskActionResult action_result~%ManipTaskActionFeedback action_feedback~%~%================================================================================~%MSG: coordinator/ManipTaskActionGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalID goal_id~%ManipTaskGoal goal~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: coordinator/ManipTaskGoal~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#goal: specify object code, perception type (incl blind), dropoff location, optional pickup location~%#task codes:~%int32 PCL_VISION = 1 # could have more camera sources to refer to~%int32 BLIND_MANIP = 2 #expect pose specified in pickup_location field~%~%#action codes:~%int32 GET_PICKUP_POSE = 1 #low level ops; maybe don't implement~%int32 WAIT_FOR_FINDER = 101~%~%int32 FIND_TABLE_SURFACE = 2 #do this once, and re-use result for multiple objects~%int32 WAIT_FIND_TABLE_SURFACE = 102~%~%int32 GRAB_OBJECT = 3 #assumes use of current pickup pose,~%                      #whether provided for \"blind\" manip, or found~%                      #from use of PCL_VISION~%int32 WAIT_FOR_GRAB_OBJECT = 103    ~%                 ~%int32 DROPOFF_OBJECT = 4 #must provide dropoff_frame in goal msg~%int32 WAIT_FOR_DROPOFF_OBJECT = 104~%~%#int32 MANIP_OBJECT = 5 #macro: does perception, grab, and dropoff~%                       #MUST provide dropoff frame, and means to~%                       #get pickup_frame~%~%int32 STRADDLE_OBJECT = 8 #test mode--simply straddle object, but don't grasp it~%int32 WAIT_FOR_STRADDLE_OBJECT = 108~%~%int32 CART_MOVE_TO_GRIPPER_POSE = 9~%int32 WAIT_FOR_CART_MOVE = 109~%                       ~%int32 NO_CURRENT_TASK = 6~%int32 MOVE_TO_PRE_POSE = 7~%int32 WAIT_FOR_MOVE_TO_PREPOSE = 107~%int32 WAIT_FOR_MOVE = 107 #generic wait-for-move status~%~%int32 ABORT= 666~%~%#goal specification:~%int32 action_code #what action should be performed?~%int32 object_code #refer to a-priori known object types by object-ID codes~%geometry_msgs/PoseStamped pickup_frame #specify object coords for pickup ~%geometry_msgs/PoseStamped dropoff_frame #specify desired drop-off coords of object's frame~%geometry_msgs/PoseStamped gripper_goal_frame #a goal frame to move gripper~%int32 perception_source  #e.g. name a camera source~%~%================================================================================~%MSG: geometry_msgs/PoseStamped~%# A Pose with reference coordinate frame and timestamp~%Header header~%Pose pose~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: coordinator/ManipTaskActionResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%ManipTaskResult result~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: coordinator/ManipTaskResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#return codes:~%int32 MANIP_SUCCESS = 0~%int32 FAILED_PERCEPTION = 1~%int32 FAILED_PICKUP_PLAN =2 ~%int32 FAILED_DROPOFF_PLAN=3~%int32 FAILED_PICKUP=4~%int32 FAILED_DROPOFF=5~%int32 DROPPED_OBJECT = 6~%int32 ABORTED = 7~%int32 PENDING = 8~%int32 FAILED_MOVE = 9~%~%int32 manip_return_code~%int32 object_grabber_return_code~%geometry_msgs/PoseStamped des_gripper_pose~%int32 object_finder_return_code~%geometry_msgs/PoseStamped object_pose~%~%~%================================================================================~%MSG: coordinator/ManipTaskActionFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%ManipTaskFeedback feedback~%~%================================================================================~%MSG: coordinator/ManipTaskFeedback~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#feedback codes:  perception_busy; planning_busy; pickup_busy; dropoff_busy~%int32 RECEIVED_NEW_TASK = 0~%int32 PERCEPTION_BUSY = 1~%int32 PICKUP_PLANNING_BUSY = 2~%int32 PICKUP_MOTION_BUSY = 3~%int32 PICKUP_SUCCESSFUL = 103~%int32 DROPOFF_PLANNING_BUSY = 4~%int32 DROPOFF_MOTION_BUSY = 5~%int32 NO_CURRENT_TASK = 6~%int32 ABORTED = 7~%int32 COMPLETED_MOVE = 8~%int32 COMPLETED_DROPOFF = 9~%int32 PREPOSE_MOVE_BUSY = 10~%int32 MOVE_BUSY = 11~%~%~%int32 feedback_status~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <ManipTaskAction>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_goal))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_result))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'action_feedback))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <ManipTaskAction>))
  "Converts a ROS message object to a list"
  (cl:list 'ManipTaskAction
    (cl:cons ':action_goal (action_goal msg))
    (cl:cons ':action_result (action_result msg))
    (cl:cons ':action_feedback (action_feedback msg))
))

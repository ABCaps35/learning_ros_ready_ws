; Auto-generated. Do not edit!


(cl:in-package object_manipulation_properties-srv)


;//! \htmlinclude objectManipulationQuery-request.msg.html

(cl:defclass <objectManipulationQuery-request> (roslisp-msg-protocol:ros-message)
  ((object_ID
    :reader object_ID
    :initarg :object_ID
    :type cl:integer
    :initform 0)
   (gripper_ID
    :reader gripper_ID
    :initarg :gripper_ID
    :type cl:integer
    :initform 0)
   (query_code
    :reader query_code
    :initarg :query_code
    :type cl:fixnum
    :initform 0)
   (grasp_option
    :reader grasp_option
    :initarg :grasp_option
    :type cl:integer
    :initform 0))
)

(cl:defclass objectManipulationQuery-request (<objectManipulationQuery-request>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <objectManipulationQuery-request>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'objectManipulationQuery-request)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name object_manipulation_properties-srv:<objectManipulationQuery-request> is deprecated: use object_manipulation_properties-srv:objectManipulationQuery-request instead.")))

(cl:ensure-generic-function 'object_ID-val :lambda-list '(m))
(cl:defmethod object_ID-val ((m <objectManipulationQuery-request>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:object_ID-val is deprecated.  Use object_manipulation_properties-srv:object_ID instead.")
  (object_ID m))

(cl:ensure-generic-function 'gripper_ID-val :lambda-list '(m))
(cl:defmethod gripper_ID-val ((m <objectManipulationQuery-request>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:gripper_ID-val is deprecated.  Use object_manipulation_properties-srv:gripper_ID instead.")
  (gripper_ID m))

(cl:ensure-generic-function 'query_code-val :lambda-list '(m))
(cl:defmethod query_code-val ((m <objectManipulationQuery-request>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:query_code-val is deprecated.  Use object_manipulation_properties-srv:query_code instead.")
  (query_code m))

(cl:ensure-generic-function 'grasp_option-val :lambda-list '(m))
(cl:defmethod grasp_option-val ((m <objectManipulationQuery-request>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:grasp_option-val is deprecated.  Use object_manipulation_properties-srv:grasp_option instead.")
  (grasp_option m))
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql '<objectManipulationQuery-request>)))
    "Constants for message type '<objectManipulationQuery-request>"
  '((:TEST_PING . 0)
    (:GRASP_STRATEGY_OPTIONS_QUERY . 1)
    (:APPROACH_STRATEGY_OPTIONS_QUERY . 2)
    (:DEPART_STRATEGY_OPTIONS_QUERY . 3)
    (:GET_GRASP_POSE_TRANSFORMS . 10)
    (:GET_APPROACH_POSE_TRANSFORMS . 11)
    (:GET_DEPART_POSE_TRANSFORMS . 12)
    (:GRASP_FROM_ABOVE . 0)
    (:GRASP_FROM_SIDE . 1)
    (:APPROACH_Z_TOOL . 11)
    (:DEPART_Z_TOOL . 12)
    (:APPROACH_LATERAL_SLIDE . 21)
    (:DEPART_LATERAL_SLIDE . 22))
)
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql 'objectManipulationQuery-request)))
    "Constants for message type 'objectManipulationQuery-request"
  '((:TEST_PING . 0)
    (:GRASP_STRATEGY_OPTIONS_QUERY . 1)
    (:APPROACH_STRATEGY_OPTIONS_QUERY . 2)
    (:DEPART_STRATEGY_OPTIONS_QUERY . 3)
    (:GET_GRASP_POSE_TRANSFORMS . 10)
    (:GET_APPROACH_POSE_TRANSFORMS . 11)
    (:GET_DEPART_POSE_TRANSFORMS . 12)
    (:GRASP_FROM_ABOVE . 0)
    (:GRASP_FROM_SIDE . 1)
    (:APPROACH_Z_TOOL . 11)
    (:DEPART_Z_TOOL . 12)
    (:APPROACH_LATERAL_SLIDE . 21)
    (:DEPART_LATERAL_SLIDE . 22))
)
(cl:defmethod roslisp-msg-protocol:serialize ((msg <objectManipulationQuery-request>) ostream)
  "Serializes a message object of type '<objectManipulationQuery-request>"
  (cl:let* ((signed (cl:slot-value msg 'object_ID)) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    )
  (cl:let* ((signed (cl:slot-value msg 'gripper_ID)) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    )
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'query_code)) ostream)
  (cl:let* ((signed (cl:slot-value msg 'grasp_option)) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    )
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <objectManipulationQuery-request>) istream)
  "Deserializes a message object of type '<objectManipulationQuery-request>"
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'object_ID) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'gripper_ID) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))
    (cl:setf (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'query_code)) (cl:read-byte istream))
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'grasp_option) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<objectManipulationQuery-request>)))
  "Returns string type for a service object of type '<objectManipulationQuery-request>"
  "object_manipulation_properties/objectManipulationQueryRequest")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'objectManipulationQuery-request)))
  "Returns string type for a service object of type 'objectManipulationQuery-request"
  "object_manipulation_properties/objectManipulationQueryRequest")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<objectManipulationQuery-request>)))
  "Returns md5sum for a message object of type '<objectManipulationQuery-request>"
  "00b4b08f066e8274009b927a6e082179")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'objectManipulationQuery-request)))
  "Returns md5sum for a message object of type 'objectManipulationQuery-request"
  "00b4b08f066e8274009b927a6e082179")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<objectManipulationQuery-request>)))
  "Returns full string definition for message of type '<objectManipulationQuery-request>"
  (cl:format cl:nil "#objectManipulationQuery service message codes~%#send request as a query, e.g., what types of grasp strategies are available~%# for specified object_ID and gripper_ID? ~%~%uint8 TEST_PING = 0~%uint8 GRASP_STRATEGY_OPTIONS_QUERY = 1~%uint8 APPROACH_STRATEGY_OPTIONS_QUERY = 2~%uint8 DEPART_STRATEGY_OPTIONS_QUERY = 3~%~%uint8 GET_GRASP_POSE_TRANSFORMS = 10~%uint8 GET_APPROACH_POSE_TRANSFORMS = 11~%uint8 GET_DEPART_POSE_TRANSFORMS =12~%~%#grasp options~%int32 GRASP_FROM_ABOVE = 0 #grasp object from above, e.g. toy block; applicable to vacuum-gripper approach~%                                #along direction normal to object towards grasp pose~%int32 GRASP_FROM_SIDE = 1 #e.g., grab a bottle in power grasp, or slide a hook sideways in/under object ~%~%#approach/depart options: must be same as corresponding response codes below~%int32 APPROACH_Z_TOOL= 11  #e.g., descend vertically to part along tool-z axis~%int32 DEPART_Z_TOOL = 12   # depart from object along neg tool-z axis~%int32 APPROACH_LATERAL_SLIDE = 21 #approach grasp pose by sliding along axis btwn fingertips~%int32 DEPART_LATERAL_SLIDE = 22  #depart grasp pose by sliding along axis btwn fingertips~%~%int32 object_ID~%int32 gripper_ID~%uint8 query_code~%int32 grasp_option~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'objectManipulationQuery-request)))
  "Returns full string definition for message of type 'objectManipulationQuery-request"
  (cl:format cl:nil "#objectManipulationQuery service message codes~%#send request as a query, e.g., what types of grasp strategies are available~%# for specified object_ID and gripper_ID? ~%~%uint8 TEST_PING = 0~%uint8 GRASP_STRATEGY_OPTIONS_QUERY = 1~%uint8 APPROACH_STRATEGY_OPTIONS_QUERY = 2~%uint8 DEPART_STRATEGY_OPTIONS_QUERY = 3~%~%uint8 GET_GRASP_POSE_TRANSFORMS = 10~%uint8 GET_APPROACH_POSE_TRANSFORMS = 11~%uint8 GET_DEPART_POSE_TRANSFORMS =12~%~%#grasp options~%int32 GRASP_FROM_ABOVE = 0 #grasp object from above, e.g. toy block; applicable to vacuum-gripper approach~%                                #along direction normal to object towards grasp pose~%int32 GRASP_FROM_SIDE = 1 #e.g., grab a bottle in power grasp, or slide a hook sideways in/under object ~%~%#approach/depart options: must be same as corresponding response codes below~%int32 APPROACH_Z_TOOL= 11  #e.g., descend vertically to part along tool-z axis~%int32 DEPART_Z_TOOL = 12   # depart from object along neg tool-z axis~%int32 APPROACH_LATERAL_SLIDE = 21 #approach grasp pose by sliding along axis btwn fingertips~%int32 DEPART_LATERAL_SLIDE = 22  #depart grasp pose by sliding along axis btwn fingertips~%~%int32 object_ID~%int32 gripper_ID~%uint8 query_code~%int32 grasp_option~%~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <objectManipulationQuery-request>))
  (cl:+ 0
     4
     4
     1
     4
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <objectManipulationQuery-request>))
  "Converts a ROS message object to a list"
  (cl:list 'objectManipulationQuery-request
    (cl:cons ':object_ID (object_ID msg))
    (cl:cons ':gripper_ID (gripper_ID msg))
    (cl:cons ':query_code (query_code msg))
    (cl:cons ':grasp_option (grasp_option msg))
))
;//! \htmlinclude objectManipulationQuery-response.msg.html

(cl:defclass <objectManipulationQuery-response> (roslisp-msg-protocol:ros-message)
  ((valid_reply
    :reader valid_reply
    :initarg :valid_reply
    :type cl:boolean
    :initform cl:nil)
   (grasp_strategy_options
    :reader grasp_strategy_options
    :initarg :grasp_strategy_options
    :type (cl:vector cl:integer)
   :initform (cl:make-array 0 :element-type 'cl:integer :initial-element 0))
   (gripper_pose_options
    :reader gripper_pose_options
    :initarg :gripper_pose_options
    :type (cl:vector geometry_msgs-msg:Pose)
   :initform (cl:make-array 0 :element-type 'geometry_msgs-msg:Pose :initial-element (cl:make-instance 'geometry_msgs-msg:Pose)))
   (tool_rotz_max
    :reader tool_rotz_max
    :initarg :tool_rotz_max
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (tool_rotz_min
    :reader tool_rotz_min
    :initarg :tool_rotz_min
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (object_rotz_max
    :reader object_rotz_max
    :initarg :object_rotz_max
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (object_rotz_min
    :reader object_rotz_min
    :initarg :object_rotz_min
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (tool_dz_max
    :reader tool_dz_max
    :initarg :tool_dz_max
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (tool_dz_min
    :reader tool_dz_min
    :initarg :tool_dz_min
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (tool_dslide_max
    :reader tool_dslide_max
    :initarg :tool_dslide_max
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (tool_dslide_min
    :reader tool_dslide_min
    :initarg :tool_dslide_min
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0)))
)

(cl:defclass objectManipulationQuery-response (<objectManipulationQuery-response>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <objectManipulationQuery-response>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'objectManipulationQuery-response)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name object_manipulation_properties-srv:<objectManipulationQuery-response> is deprecated: use object_manipulation_properties-srv:objectManipulationQuery-response instead.")))

(cl:ensure-generic-function 'valid_reply-val :lambda-list '(m))
(cl:defmethod valid_reply-val ((m <objectManipulationQuery-response>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:valid_reply-val is deprecated.  Use object_manipulation_properties-srv:valid_reply instead.")
  (valid_reply m))

(cl:ensure-generic-function 'grasp_strategy_options-val :lambda-list '(m))
(cl:defmethod grasp_strategy_options-val ((m <objectManipulationQuery-response>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:grasp_strategy_options-val is deprecated.  Use object_manipulation_properties-srv:grasp_strategy_options instead.")
  (grasp_strategy_options m))

(cl:ensure-generic-function 'gripper_pose_options-val :lambda-list '(m))
(cl:defmethod gripper_pose_options-val ((m <objectManipulationQuery-response>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:gripper_pose_options-val is deprecated.  Use object_manipulation_properties-srv:gripper_pose_options instead.")
  (gripper_pose_options m))

(cl:ensure-generic-function 'tool_rotz_max-val :lambda-list '(m))
(cl:defmethod tool_rotz_max-val ((m <objectManipulationQuery-response>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:tool_rotz_max-val is deprecated.  Use object_manipulation_properties-srv:tool_rotz_max instead.")
  (tool_rotz_max m))

(cl:ensure-generic-function 'tool_rotz_min-val :lambda-list '(m))
(cl:defmethod tool_rotz_min-val ((m <objectManipulationQuery-response>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:tool_rotz_min-val is deprecated.  Use object_manipulation_properties-srv:tool_rotz_min instead.")
  (tool_rotz_min m))

(cl:ensure-generic-function 'object_rotz_max-val :lambda-list '(m))
(cl:defmethod object_rotz_max-val ((m <objectManipulationQuery-response>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:object_rotz_max-val is deprecated.  Use object_manipulation_properties-srv:object_rotz_max instead.")
  (object_rotz_max m))

(cl:ensure-generic-function 'object_rotz_min-val :lambda-list '(m))
(cl:defmethod object_rotz_min-val ((m <objectManipulationQuery-response>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:object_rotz_min-val is deprecated.  Use object_manipulation_properties-srv:object_rotz_min instead.")
  (object_rotz_min m))

(cl:ensure-generic-function 'tool_dz_max-val :lambda-list '(m))
(cl:defmethod tool_dz_max-val ((m <objectManipulationQuery-response>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:tool_dz_max-val is deprecated.  Use object_manipulation_properties-srv:tool_dz_max instead.")
  (tool_dz_max m))

(cl:ensure-generic-function 'tool_dz_min-val :lambda-list '(m))
(cl:defmethod tool_dz_min-val ((m <objectManipulationQuery-response>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:tool_dz_min-val is deprecated.  Use object_manipulation_properties-srv:tool_dz_min instead.")
  (tool_dz_min m))

(cl:ensure-generic-function 'tool_dslide_max-val :lambda-list '(m))
(cl:defmethod tool_dslide_max-val ((m <objectManipulationQuery-response>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:tool_dslide_max-val is deprecated.  Use object_manipulation_properties-srv:tool_dslide_max instead.")
  (tool_dslide_max m))

(cl:ensure-generic-function 'tool_dslide_min-val :lambda-list '(m))
(cl:defmethod tool_dslide_min-val ((m <objectManipulationQuery-response>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader object_manipulation_properties-srv:tool_dslide_min-val is deprecated.  Use object_manipulation_properties-srv:tool_dslide_min instead.")
  (tool_dslide_min m))
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql '<objectManipulationQuery-response>)))
    "Constants for message type '<objectManipulationQuery-response>"
  '((:QUERY_SUCCESSFUL . 0)
    (:QUERY_NOT_VALID . 1)
    (:APPROACH_Z_TOOL . 11)
    (:DEPART_Z_TOOL . 12)
    (:APPROACH_LATERAL_SLIDE . 21)
    (:DEPART_LATERAL_SLIDE . 22)
    (:GRASP_FROM_ABOVE . 0)
    (:GRASP_FROM_SIDE . 1))
)
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql 'objectManipulationQuery-response)))
    "Constants for message type 'objectManipulationQuery-response"
  '((:QUERY_SUCCESSFUL . 0)
    (:QUERY_NOT_VALID . 1)
    (:APPROACH_Z_TOOL . 11)
    (:DEPART_Z_TOOL . 12)
    (:APPROACH_LATERAL_SLIDE . 21)
    (:DEPART_LATERAL_SLIDE . 22)
    (:GRASP_FROM_ABOVE . 0)
    (:GRASP_FROM_SIDE . 1))
)
(cl:defmethod roslisp-msg-protocol:serialize ((msg <objectManipulationQuery-response>) ostream)
  "Serializes a message object of type '<objectManipulationQuery-response>"
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:if (cl:slot-value msg 'valid_reply) 1 0)) ostream)
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'grasp_strategy_options))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'grasp_strategy_options))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'gripper_pose_options))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (roslisp-msg-protocol:serialize ele ostream))
   (cl:slot-value msg 'gripper_pose_options))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'tool_rotz_max))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'tool_rotz_max))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'tool_rotz_min))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'tool_rotz_min))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'object_rotz_max))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'object_rotz_max))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'object_rotz_min))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'object_rotz_min))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'tool_dz_max))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'tool_dz_max))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'tool_dz_min))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'tool_dz_min))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'tool_dslide_max))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'tool_dslide_max))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'tool_dslide_min))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'tool_dslide_min))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <objectManipulationQuery-response>) istream)
  "Deserializes a message object of type '<objectManipulationQuery-response>"
    (cl:setf (cl:slot-value msg 'valid_reply) (cl:not (cl:zerop (cl:read-byte istream))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'grasp_strategy_options) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'grasp_strategy_options)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296)))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'gripper_pose_options) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'gripper_pose_options)))
    (cl:dotimes (i __ros_arr_len)
    (cl:setf (cl:aref vals i) (cl:make-instance 'geometry_msgs-msg:Pose))
  (roslisp-msg-protocol:deserialize (cl:aref vals i) istream))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'tool_rotz_max) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'tool_rotz_max)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'tool_rotz_min) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'tool_rotz_min)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'object_rotz_max) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'object_rotz_max)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'object_rotz_min) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'object_rotz_min)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'tool_dz_max) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'tool_dz_max)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'tool_dz_min) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'tool_dz_min)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'tool_dslide_max) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'tool_dslide_max)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'tool_dslide_min) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'tool_dslide_min)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<objectManipulationQuery-response>)))
  "Returns string type for a service object of type '<objectManipulationQuery-response>"
  "object_manipulation_properties/objectManipulationQueryResponse")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'objectManipulationQuery-response)))
  "Returns string type for a service object of type 'objectManipulationQuery-response"
  "object_manipulation_properties/objectManipulationQueryResponse")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<objectManipulationQuery-response>)))
  "Returns md5sum for a message object of type '<objectManipulationQuery-response>"
  "00b4b08f066e8274009b927a6e082179")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'objectManipulationQuery-response)))
  "Returns md5sum for a message object of type 'objectManipulationQuery-response"
  "00b4b08f066e8274009b927a6e082179")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<objectManipulationQuery-response>)))
  "Returns full string definition for message of type '<objectManipulationQuery-response>"
  (cl:format cl:nil "int32 QUERY_SUCCESSFUL =0~%int32 QUERY_NOT_VALID = 1~%int32 APPROACH_Z_TOOL= 11  #e.g., descend vertically to part along tool-z axis~%int32 DEPART_Z_TOOL = 12   # depart from object along neg tool-z axis~%int32 APPROACH_LATERAL_SLIDE = 21 #approach grasp pose by sliding along axis btwn fingertips~%int32 DEPART_LATERAL_SLIDE = 22  #depart grasp pose by sliding along axis btwn fingertips~%~%int32 GRASP_FROM_ABOVE = 0 #grasp object from above, e.g. toy block; applicable to vacuum-gripper approach~%                                #along direction normal to object towards grasp pose~%int32 GRASP_FROM_SIDE = 1 #e.g., grab a bottle in power grasp, or slide a hook sideways in/under object ~%~%#int32 GRASP_OPTIONS_TOOL_ROTZ = 1 #cue that other grasp options correspond to tool-z rotation, e.g. grabbing a ball,~%                                  #or vacuum-gripper rot about z axis options~%#int32 GRASP_OPTIONS_OBJECT_ROTZ = 2 #cue that can grab/approach object from arbitrary angle about object z-axis,~%                                 #e.g. power grasp of a bottle does not care about polar angle of grasp~%#int32 GRASP_OPTIONS_DZ = 3 #for approach_z_tool, can specify range of z values relative to object frame:~%~%bool valid_reply~%int32[] grasp_strategy_options  #these are codes: GRASP_FROM_ABOVE or GRASP_FROM_SIDE, ~%    #APPROACH_Z_TOOL, APPROACH_LATERAL_SLIDE...options relevant to inquiry~%~%~%#return grasp transform for specified object, specified gripper, and specified grasp strategy~%#if this field is returned empty, then the specified gripper cannot grasp the specified object~%#alternatively, may have multiple, discrete options--with tolerances~%geometry_msgs/Pose[] gripper_pose_options  #for a given grasp strategy, e.g. from above, can still have~%                                               #discrete possibilities, e.g. 4 poses for a square block,~%                                               #2 poses for a long block; 6 poses for a hexagonal block, etc~%                                               # can be as simple as unique required grasp pose~%#re-use gripper_pose_options for approach and depart inquiries~%#geometry_msgs/PoseStamped des_depart_transform  #e.g., pure depart along z-axis is same xform, regardless of grasp pose~%#geometry_msgs/PoseStamped des_approach_transform #ditto~%#tolerances on grasp pose: can set these to zero by default--> mandates use of specified grasp pose(s)~%#can specify these tolerances for each listed, discrete grasp solution~%#or, if length=0, do not allow tolerances for any listed grasp transform~%float64[] tool_rotz_max        #valid grasp options may include range of tool-z-rot angles, e.g. grasping ball from above~%float64[] tool_rotz_min        #can specify min and max tool-z-rot angles~%float64[] object_rotz_max      #e.g., can approach an upright cylinder from the side, w/ arbitrary radial approach dir~%float64[] object_rotz_min      #can specify polar angle range allowed for such approach~%float64[] tool_dz_max           #fingertips/gripper origin displacement along tool-z has some tolerance, min-max~%float64[] tool_dz_min          #relative to nominal grasp pose ~%float64[] tool_dslide_max      #tolerance, +/- for grasp in tool lateral direction~%float64[] tool_dslide_min~%~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'objectManipulationQuery-response)))
  "Returns full string definition for message of type 'objectManipulationQuery-response"
  (cl:format cl:nil "int32 QUERY_SUCCESSFUL =0~%int32 QUERY_NOT_VALID = 1~%int32 APPROACH_Z_TOOL= 11  #e.g., descend vertically to part along tool-z axis~%int32 DEPART_Z_TOOL = 12   # depart from object along neg tool-z axis~%int32 APPROACH_LATERAL_SLIDE = 21 #approach grasp pose by sliding along axis btwn fingertips~%int32 DEPART_LATERAL_SLIDE = 22  #depart grasp pose by sliding along axis btwn fingertips~%~%int32 GRASP_FROM_ABOVE = 0 #grasp object from above, e.g. toy block; applicable to vacuum-gripper approach~%                                #along direction normal to object towards grasp pose~%int32 GRASP_FROM_SIDE = 1 #e.g., grab a bottle in power grasp, or slide a hook sideways in/under object ~%~%#int32 GRASP_OPTIONS_TOOL_ROTZ = 1 #cue that other grasp options correspond to tool-z rotation, e.g. grabbing a ball,~%                                  #or vacuum-gripper rot about z axis options~%#int32 GRASP_OPTIONS_OBJECT_ROTZ = 2 #cue that can grab/approach object from arbitrary angle about object z-axis,~%                                 #e.g. power grasp of a bottle does not care about polar angle of grasp~%#int32 GRASP_OPTIONS_DZ = 3 #for approach_z_tool, can specify range of z values relative to object frame:~%~%bool valid_reply~%int32[] grasp_strategy_options  #these are codes: GRASP_FROM_ABOVE or GRASP_FROM_SIDE, ~%    #APPROACH_Z_TOOL, APPROACH_LATERAL_SLIDE...options relevant to inquiry~%~%~%#return grasp transform for specified object, specified gripper, and specified grasp strategy~%#if this field is returned empty, then the specified gripper cannot grasp the specified object~%#alternatively, may have multiple, discrete options--with tolerances~%geometry_msgs/Pose[] gripper_pose_options  #for a given grasp strategy, e.g. from above, can still have~%                                               #discrete possibilities, e.g. 4 poses for a square block,~%                                               #2 poses for a long block; 6 poses for a hexagonal block, etc~%                                               # can be as simple as unique required grasp pose~%#re-use gripper_pose_options for approach and depart inquiries~%#geometry_msgs/PoseStamped des_depart_transform  #e.g., pure depart along z-axis is same xform, regardless of grasp pose~%#geometry_msgs/PoseStamped des_approach_transform #ditto~%#tolerances on grasp pose: can set these to zero by default--> mandates use of specified grasp pose(s)~%#can specify these tolerances for each listed, discrete grasp solution~%#or, if length=0, do not allow tolerances for any listed grasp transform~%float64[] tool_rotz_max        #valid grasp options may include range of tool-z-rot angles, e.g. grasping ball from above~%float64[] tool_rotz_min        #can specify min and max tool-z-rot angles~%float64[] object_rotz_max      #e.g., can approach an upright cylinder from the side, w/ arbitrary radial approach dir~%float64[] object_rotz_min      #can specify polar angle range allowed for such approach~%float64[] tool_dz_max           #fingertips/gripper origin displacement along tool-z has some tolerance, min-max~%float64[] tool_dz_min          #relative to nominal grasp pose ~%float64[] tool_dslide_max      #tolerance, +/- for grasp in tool lateral direction~%float64[] tool_dslide_min~%~%~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <objectManipulationQuery-response>))
  (cl:+ 0
     1
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'grasp_strategy_options) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'gripper_pose_options) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ (roslisp-msg-protocol:serialization-length ele))))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'tool_rotz_max) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'tool_rotz_min) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'object_rotz_max) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'object_rotz_min) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'tool_dz_max) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'tool_dz_min) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'tool_dslide_max) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'tool_dslide_min) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <objectManipulationQuery-response>))
  "Converts a ROS message object to a list"
  (cl:list 'objectManipulationQuery-response
    (cl:cons ':valid_reply (valid_reply msg))
    (cl:cons ':grasp_strategy_options (grasp_strategy_options msg))
    (cl:cons ':gripper_pose_options (gripper_pose_options msg))
    (cl:cons ':tool_rotz_max (tool_rotz_max msg))
    (cl:cons ':tool_rotz_min (tool_rotz_min msg))
    (cl:cons ':object_rotz_max (object_rotz_max msg))
    (cl:cons ':object_rotz_min (object_rotz_min msg))
    (cl:cons ':tool_dz_max (tool_dz_max msg))
    (cl:cons ':tool_dz_min (tool_dz_min msg))
    (cl:cons ':tool_dslide_max (tool_dslide_max msg))
    (cl:cons ':tool_dslide_min (tool_dslide_min msg))
))
(cl:defmethod roslisp-msg-protocol:service-request-type ((msg (cl:eql 'objectManipulationQuery)))
  'objectManipulationQuery-request)
(cl:defmethod roslisp-msg-protocol:service-response-type ((msg (cl:eql 'objectManipulationQuery)))
  'objectManipulationQuery-response)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'objectManipulationQuery)))
  "Returns string type for a service object of type '<objectManipulationQuery>"
  "object_manipulation_properties/objectManipulationQuery")
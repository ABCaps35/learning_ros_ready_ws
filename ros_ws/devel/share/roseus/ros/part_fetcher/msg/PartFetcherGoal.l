;; Auto-generated. Do not edit!


(when (boundp 'part_fetcher::PartFetcherGoal)
  (if (not (find-package "PART_FETCHER"))
    (make-package "PART_FETCHER"))
  (shadow 'PartFetcherGoal (find-package "PART_FETCHER")))
(unless (find-package "PART_FETCHER::PARTFETCHERGOAL")
  (make-package "PART_FETCHER::PARTFETCHERGOAL"))

(in-package "ROS")
;;//! \htmlinclude PartFetcherGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass part_fetcher::PartFetcherGoal
  :super ros::object
  :slots (_object_id _object_frame _desired_frame ))

(defmethod part_fetcher::PartFetcherGoal
  (:init
   (&key
    ((:object_id __object_id) 0)
    ((:object_frame __object_frame) (instance geometry_msgs::PoseStamped :init))
    ((:desired_frame __desired_frame) (instance geometry_msgs::PoseStamped :init))
    )
   (send-super :init)
   (setq _object_id (round __object_id))
   (setq _object_frame __object_frame)
   (setq _desired_frame __desired_frame)
   self)
  (:object_id
   (&optional __object_id)
   (if __object_id (setq _object_id __object_id)) _object_id)
  (:object_frame
   (&rest __object_frame)
   (if (keywordp (car __object_frame))
       (send* _object_frame __object_frame)
     (progn
       (if __object_frame (setq _object_frame (car __object_frame)))
       _object_frame)))
  (:desired_frame
   (&rest __desired_frame)
   (if (keywordp (car __desired_frame))
       (send* _desired_frame __desired_frame)
     (progn
       (if __desired_frame (setq _desired_frame (car __desired_frame)))
       _desired_frame)))
  (:serialization-length
   ()
   (+
    ;; int32 _object_id
    4
    ;; geometry_msgs/PoseStamped _object_frame
    (send _object_frame :serialization-length)
    ;; geometry_msgs/PoseStamped _desired_frame
    (send _desired_frame :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _object_id
       (write-long _object_id s)
     ;; geometry_msgs/PoseStamped _object_frame
       (send _object_frame :serialize s)
     ;; geometry_msgs/PoseStamped _desired_frame
       (send _desired_frame :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _object_id
     (setq _object_id (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; geometry_msgs/PoseStamped _object_frame
     (send _object_frame :deserialize buf ptr-) (incf ptr- (send _object_frame :serialization-length))
   ;; geometry_msgs/PoseStamped _desired_frame
     (send _desired_frame :deserialize buf ptr-) (incf ptr- (send _desired_frame :serialization-length))
   ;;
   self)
  )

(setf (get part_fetcher::PartFetcherGoal :md5sum-) "3ed50a2a1765af4bdef88bc97e5adc74")
(setf (get part_fetcher::PartFetcherGoal :datatype-) "part_fetcher/PartFetcherGoal")
(setf (get part_fetcher::PartFetcherGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#action message for part fetcher
#specify a part ID, starting pose, and desired destination pose
int32 object_id
geometry_msgs/PoseStamped object_frame
geometry_msgs/PoseStamped desired_frame

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :part_fetcher/PartFetcherGoal "3ed50a2a1765af4bdef88bc97e5adc74")



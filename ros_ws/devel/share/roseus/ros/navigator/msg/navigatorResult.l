;; Auto-generated. Do not edit!


(when (boundp 'navigator::navigatorResult)
  (if (not (find-package "NAVIGATOR"))
    (make-package "NAVIGATOR"))
  (shadow 'navigatorResult (find-package "NAVIGATOR")))
(unless (find-package "NAVIGATOR::NAVIGATORRESULT")
  (make-package "NAVIGATOR::NAVIGATORRESULT"))

(in-package "ROS")
;;//! \htmlinclude navigatorResult.msg.html


(intern "*DESIRED_POSE_ACHIEVED*" (find-package "NAVIGATOR::NAVIGATORRESULT"))
(shadow '*DESIRED_POSE_ACHIEVED* (find-package "NAVIGATOR::NAVIGATORRESULT"))
(defconstant navigator::navigatorResult::*DESIRED_POSE_ACHIEVED* 0)
(intern "*FAILED_CANNOT_REACH_DES_POSE*" (find-package "NAVIGATOR::NAVIGATORRESULT"))
(shadow '*FAILED_CANNOT_REACH_DES_POSE* (find-package "NAVIGATOR::NAVIGATORRESULT"))
(defconstant navigator::navigatorResult::*FAILED_CANNOT_REACH_DES_POSE* 1)
(intern "*DESTINATION_CODE_UNRECOGNIZED*" (find-package "NAVIGATOR::NAVIGATORRESULT"))
(shadow '*DESTINATION_CODE_UNRECOGNIZED* (find-package "NAVIGATOR::NAVIGATORRESULT"))
(defconstant navigator::navigatorResult::*DESTINATION_CODE_UNRECOGNIZED* 2)

(defun navigator::navigatorResult-to-symbol (const)
  (cond
        ((= const 0) 'navigator::navigatorResult::*DESIRED_POSE_ACHIEVED*)
        ((= const 1) 'navigator::navigatorResult::*FAILED_CANNOT_REACH_DES_POSE*)
        ((= const 2) 'navigator::navigatorResult::*DESTINATION_CODE_UNRECOGNIZED*)
        (t nil)))

(defclass navigator::navigatorResult
  :super ros::object
  :slots (_return_code ))

(defmethod navigator::navigatorResult
  (:init
   (&key
    ((:return_code __return_code) 0)
    )
   (send-super :init)
   (setq _return_code (round __return_code))
   self)
  (:return_code
   (&optional __return_code)
   (if __return_code (setq _return_code __return_code)) _return_code)
  (:serialization-length
   ()
   (+
    ;; int32 _return_code
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _return_code
       (write-long _return_code s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _return_code
     (setq _return_code (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get navigator::navigatorResult :md5sum-) "fabb31d31e88f1a2f8c43be51e2540c7")
(setf (get navigator::navigatorResult :datatype-) "navigator/navigatorResult")
(setf (get navigator::navigatorResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result definition
#  response codes...
int32 DESIRED_POSE_ACHIEVED=0
int32 FAILED_CANNOT_REACH_DES_POSE=1
int32 DESTINATION_CODE_UNRECOGNIZED=2
#could add more informative failure codes here...

int32 return_code

")



(provide :navigator/navigatorResult "fabb31d31e88f1a2f8c43be51e2540c7")



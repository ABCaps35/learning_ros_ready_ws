// Generated by gencpp from file arm7dof_traj_as/trajResult.msg
// DO NOT EDIT!


#ifndef ARM7DOF_TRAJ_AS_MESSAGE_TRAJRESULT_H
#define ARM7DOF_TRAJ_AS_MESSAGE_TRAJRESULT_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace arm7dof_traj_as
{
template <class ContainerAllocator>
struct trajResult_
{
  typedef trajResult_<ContainerAllocator> Type;

  trajResult_()
    : return_val(0)  {
    }
  trajResult_(const ContainerAllocator& _alloc)
    : return_val(0)  {
  (void)_alloc;
    }



   typedef int32_t _return_val_type;
  _return_val_type return_val;





  typedef boost::shared_ptr< ::arm7dof_traj_as::trajResult_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::arm7dof_traj_as::trajResult_<ContainerAllocator> const> ConstPtr;

}; // struct trajResult_

typedef ::arm7dof_traj_as::trajResult_<std::allocator<void> > trajResult;

typedef boost::shared_ptr< ::arm7dof_traj_as::trajResult > trajResultPtr;
typedef boost::shared_ptr< ::arm7dof_traj_as::trajResult const> trajResultConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::arm7dof_traj_as::trajResult_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::arm7dof_traj_as::trajResult_<ContainerAllocator> >::stream(s, "", v);
return s;
}


template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator==(const ::arm7dof_traj_as::trajResult_<ContainerAllocator1> & lhs, const ::arm7dof_traj_as::trajResult_<ContainerAllocator2> & rhs)
{
  return lhs.return_val == rhs.return_val;
}

template<typename ContainerAllocator1, typename ContainerAllocator2>
bool operator!=(const ::arm7dof_traj_as::trajResult_<ContainerAllocator1> & lhs, const ::arm7dof_traj_as::trajResult_<ContainerAllocator2> & rhs)
{
  return !(lhs == rhs);
}


} // namespace arm7dof_traj_as

namespace ros
{
namespace message_traits
{





template <class ContainerAllocator>
struct IsMessage< ::arm7dof_traj_as::trajResult_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::arm7dof_traj_as::trajResult_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::arm7dof_traj_as::trajResult_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::arm7dof_traj_as::trajResult_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::arm7dof_traj_as::trajResult_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::arm7dof_traj_as::trajResult_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::arm7dof_traj_as::trajResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "d272e5e4ccd8d235962127b04bb0773f";
  }

  static const char* value(const ::arm7dof_traj_as::trajResult_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xd272e5e4ccd8d235ULL;
  static const uint64_t static_value2 = 0x962127b04bb0773fULL;
};

template<class ContainerAllocator>
struct DataType< ::arm7dof_traj_as::trajResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "arm7dof_traj_as/trajResult";
  }

  static const char* value(const ::arm7dof_traj_as::trajResult_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::arm7dof_traj_as::trajResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n"
"#result definition\n"
"#return_val = 1 for traj complete; traj_id should echo the input traj_id\n"
"int32 return_val\n"
;
  }

  static const char* value(const ::arm7dof_traj_as::trajResult_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::arm7dof_traj_as::trajResult_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.return_val);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct trajResult_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::arm7dof_traj_as::trajResult_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::arm7dof_traj_as::trajResult_<ContainerAllocator>& v)
  {
    s << indent << "return_val: ";
    Printer<int32_t>::stream(s, indent + "  ", v.return_val);
  }
};

} // namespace message_operations
} // namespace ros

#endif // ARM7DOF_TRAJ_AS_MESSAGE_TRAJRESULT_H
